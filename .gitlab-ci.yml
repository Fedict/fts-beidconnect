stages:
- source
- binary

srpm:
  stage: source
  image: fedora:latest
  before_script:
  - yum install -y git rpm-build rpmdevtools
  - rpmdev-setuptree
  - VER=$(git describe --always | sed -e 's/-/./g')
  - mkdir -p products/tar
  - git archive --prefix=beidconnect-$VER/ -o products/tar/beidconnect-$VER.tar.gz origin/$CI_COMMIT_REF_NAME
  - cp products/tar/beidconnect-$VER.tar.gz ~/rpmbuild/SOURCES/
  - echo $VER > products/version
  - COMMIT_DATE=$(git log --date=rfc HEAD^..HEAD|grep ^Date|cut -d ' ' -f 2-|sed -e 's/^\s*//')
  - echo $COMMIT_DATE > products/date
  script:
  - rpmbuild --define "version $VER" -bs linux/beidconnect.spec
  after_script:
  - mkdir -p products/srpm
  - cp ~/rpmbuild/SRPMS/beidconnect-*.src.rpm products/srpm/
  artifacts:
    paths:
    - products
    when:
      on_success

.build:fedora: &fedbuild
  stage: binary
  image: fedora:latest
  dependencies:
  - srpm
  before_script:
  - dnf -y install mock git rpm-build rpmdevtools
  - VER=$(cat products/version)
  script:
  - mock --old-chroot --verbose -r $DIST-$VERSION-$ARCH --define "version $VER" --rebuild products/srpm/beidconnect-*.src.rpm --resultdir $CI_PROJECT_DIR/products/$DIST-$VERSION-$ARCH
  artifacts:
    paths:
    - products/$DIST-$VERSION-$ARCH
    when:
      on_success

.build:deb: &debuild
  stage: binary
  image: tianon/sbuild:latest
  dependencies:
  # We don't actually need the srpms, but we do need the version file. Although that could be done in a separate job, having them together seems easier.
  - srpm
  before_script:
  - apt-get update; apt-get -y install devscripts dpkg-dev git debhelper
  - sbuild-createchroot --arch=$ARCH $CODE /srv/chroot/$CODE $MIRROR $SCRIPT
  - VER=$(cat products/version)
  - if [ $ARCH = "i386" ]; then DASHA="-A -s"; else DASHA="--no-arch-all --no-source"; fi
  - export DASHA
  - if [ ! -z "$http_proxy" ]; then echo "Acquire::http::Proxy \"$http_proxy\";" > /srv/chroot/$CODE/etc/apt/apt.conf.d/99proxy; fi
  - ./linux/deb-cl.pl "$VER" "$CODE" "$SHORT"
  script:
  - sbuild -n $DASHA -c $CODE-$ARCH-sbuild --arch=$ARCH
  after_script:
  - mkdir -p products/deb/$CODE/$ARCH
  - dcmd cp *ges products/deb/$CODE/$ARCH
  artifacts:
    paths:
    - products/deb
    when:
      on_success

build:fedora-32-64:
  <<: *fedbuild
  variables:
    VERSION: 32
    ARCH: x86_64
    DIST: fedora

build:fedora-32-32:
  <<: *fedbuild
  variables:
    VERSION: 32
    ARCH: i386
    DIST: fedora

build:fedora-33-64:
  <<: *fedbuild
  variables:
    VERSION: 33
    ARCH: x86_64
    DIST: fedora

build:fedora-33-32:
  <<: *fedbuild
  variables:
    VERSION: 33
    ARCH: i386
    DIST: fedora

build:centos-8-64:
  <<: *fedbuild
  variables:
    VERSION: 8
    ARCH: x86_64
    DIST: centos

build:centos-7-64:
  <<: *fedbuild
  variables:
    VERSION: 7
    ARCH: x86_64
    DIST: centos

build:debian-9-32:
  <<: *debuild
  variables:
    CODE: stretch
    SHORT: deb9
    ARCH: i386
    MIRROR: http://deb.debian.org/debian

build:debian-9-64:
  <<: *debuild
  variables:
    CODE: stretch
    SHORT: deb9
    ARCH: amd64
    MIRROR: http://deb.debian.org/debian

build:debian-10-32:
  <<: *debuild
  variables:
    CODE: buster
    SHORT: deb10
    ARCH: i386
    MIRROR: http://deb.debian.org/debian

build:debian-10-64:
  <<: *debuild
  variables:
    CODE: buster
    SHORT: deb10
    ARCH: amd64
    MIRROR: http://deb.debian.org/debian

build:ubuntu-2010-64:
  <<: *debuild
  variables:
    CODE: groovy
    ARCH: amd64
    SHORT: u2010
    MIRROR: http://archive.ubuntu.com/ubuntu
    SCRIPT: /usr/share/debootstrap/scripts/gutsy

build:ubuntu-2010-32:
  <<: *debuild
  variables:
    CODE: groovy
    ARCH: i386
    SHORT: u2010
    MIRROR: http://archive.ubuntu.com/ubuntu
    SCRIPT: /usr/share/debootstrap/scripts/gutsy

build:ubuntu-2004-64:
  <<: *debuild
  variables:
    CODE: focal
    ARCH: amd64
    SHORT: u2004
    MIRROR: http://archive.ubuntu.com/ubuntu
    SCRIPT: /usr/share/debootstrap/scripts/gutsy

build:ubuntu-2004-32:
  <<: *debuild
  variables:
    CODE: focal
    ARCH: i386
    SHORT: u2004
    MIRROR: http://archive.ubuntu.com/ubuntu
    SCRIPT: /usr/share/debootstrap/scripts/gutsy

build:ubuntu-1804-64:
  <<: *debuild
  variables:
    CODE: bionic
    ARCH: amd64
    SHORT: u1804
    MIRROR: http://archive.ubuntu.com/ubuntu
    SCRIPT: /usr/share/debootstrap/scripts/gutsy

build:ubuntu-1804-32:
  <<: *debuild
  variables:
    CODE: bionic
    ARCH: i386
    SHORT: u1804
    MIRROR: http://archive.ubuntu.com/ubuntu
    SCRIPT: /usr/share/debootstrap/scripts/gutsy
